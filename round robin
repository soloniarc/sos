import java.util.*;

class RoundRobin
{
	static Scanner t = new Scanner(System.in);

	static void roundRobin(int a[][],int n,int tq,int b[][],int temp)
	{
		int k=0;
		b[0][1] = 0;
		for(int i=0;;i=(i+1)%n)
		{

			if(a[i][1]>=tq)
			{
				a[i][1] -= tq;	if(k!=0){b[k][1] = b[k-1][1] + tq;} else b[k][1] = tq;	b[k][0] = a[i][0];	k++; 
			}
			else if(a[i][1] > 0)
			{
				if(k!=0){b[k][1] = b[k-1][1] + a[i][1];} else b[k][1] = a[i][1];	b[k][0] = a[i][0];	k++;	a[i][1] = 0;	
			}
			if(k==((temp/tq)+1))	break;
		}
	}

	static void getTatWt(int tat[],int wt[],int b[][],int temp,int n,int tq)
	{
		int count[] = new int[n];
		for(int i=0;i<n;i++)	{tat[i] = 0; wt[i] = 0; count[i] = 0;}
		for(int i=temp-1;i>=0;i--)
		{
			count[b[i][0]-1]++;
			if(tat[b[i][0]-1]==0)
			{
				tat[b[i][0]-1] = b[i][1];
			}
		}
		for(int i=temp-1;i>0;i--)
		{
			if(wt[b[i][0]-1]==0)
				wt[b[i][0]-1] = b[i-1][1] - ((count[b[i][0]-1]-1))*tq;
		}
	}

	public static void main(String args[])
	{
		System.out.print("Enter the number of processes : ");
		int n = t.nextInt();
		int a[][] = new int[30][30];
		for(int i=0;i<n;i++)
		{
			System.out.print("Enter the burst time for process "+(i+1)+" : ");
			a[i][1] = t.nextInt();
			a[i][0] = (i+1);
		}
		System.out.print("Enter a time quantum : ");
		int tq = t.nextInt();

		int temp = 0;
		for(int i=0;i<n;i++)
			temp = temp + a[i][1];
		int b[][] = new int[(temp/tq)+1][(temp/tq)+1];

		roundRobin(a,n,tq,b,temp);

		System.out.println("\n**********************\nPROCESS\tTAT\tWT");
		int t = (temp%tq)==0?(temp/tq):(temp/tq+1);
		int wt[] = new int[n];
		int tat[] = new int[n];
		float awt,atat;
		getTatWt(tat,wt,b,t,n,tq);
		for(int i=0;i<n;i++)
			System.out.println(a[i][0]+"\t"+tat[i]+"\t"+wt[i]);
		atat = 0; awt = 0;
		for(int i=0;i<n;i++)
		{
			awt = awt + wt[i];	atat = atat + tat[i];
		}
		System.out.println("\nATAT = "+(atat/n)+"\nAWT = "+(awt/n)+"\n**********************");
	}
}
